' Generated by UML Generator
' Encoded: XLHDZzCm4BtdL_YOqgQYFKQmseAWL6BHIXLmg7fmar7MMdyKssafg-Mtuw_OJbd19RBVp7kUDx7dLcaiTSzeeHu9FsA96MeeLcgbjII7NiEc4NnBVW5wNJoG5b13P4EXA5mMMcC67tX7EA2d0g7VFM4r-hgvmnnt8D5RnE6SzkN4vdGsPmrwmuwzLY4dxaEEgftsLcCD5ZZKw9t0ihNhSrEZxuI_Vu3c4QH1gifyfa_6YoRDCsAOy19Bgx4rBdYtsqzgT1AaBPw7mXFV5LuThFWtJ7imBC9rnAptYBXp4hLq6Q4oMtUbUcOSr6Wb9Rvy9ag_sN0DnlgDPPu9vxOBNY_MukXP6V4ueZxsbDRe80G5p6C5Zk0QDVKfLZ8b6N1rmeJY0uNjZnvBAAKuEzKPQWHrgp53WGwPJ9o00TSX_N_43hIhnZVQrk5NUImOtkrt-m3_gwfHQ-8TyEqvKdm1kQZHlLiaQ9b3dI7TYVRgjqMfSXIV1FkUhafkWel1nGpPxNBO3hV8crW7cU5_UjJhB2mOAqhuCiEZIR_t3krvMG-hep3IwKgolsnvSfdpPeYDtBsGud3SjlTMlXpxSfZAN9dkV37SiS28uiAZVsyuhZUfaX4XxrlwsN4ck5ROvzjW-sB2Z0YxSdjH6jYSy4diWf4C3wraX8TBnV3F5ozLca_sdEdHrAm_0MxzqnpcH3RQgkecaQu3iUey8AegcrzN33_8hi1ie6MpQJxFq_rBU6MqmnMw1TwQuVq7
' URL: http://www.plantuml.com/plantuml/uml/XLHDZzCm4BtdL_YOqgQYFKQmseAWL6BHIXLmg7fmar7MMdyKssafg-Mtuw_OJbd19RBVp7kUDx7dLcaiTSzeeHu9FsA96MeeLcgbjII7NiEc4NnBVW5wNJoG5b13P4EXA5mMMcC67tX7EA2d0g7VFM4r-hgvmnnt8D5RnE6SzkN4vdGsPmrwmuwzLY4dxaEEgftsLcCD5ZZKw9t0ihNhSrEZxuI_Vu3c4QH1gifyfa_6YoRDCsAOy19Bgx4rBdYtsqzgT1AaBPw7mXFV5LuThFWtJ7imBC9rnAptYBXp4hLq6Q4oMtUbUcOSr6Wb9Rvy9ag_sN0DnlgDPPu9vxOBNY_MukXP6V4ueZxsbDRe80G5p6C5Zk0QDVKfLZ8b6N1rmeJY0uNjZnvBAAKuEzKPQWHrgp53WGwPJ9o00TSX_N_43hIhnZVQrk5NUImOtkrt-m3_gwfHQ-8TyEqvKdm1kQZHlLiaQ9b3dI7TYVRgjqMfSXIV1FkUhafkWel1nGpPxNBO3hV8crW7cU5_UjJhB2mOAqhuCiEZIR_t3krvMG-hep3IwKgolsnvSfdpPeYDtBsGud3SjlTMlXpxSfZAN9dkV37SiS28uiAZVsyuhZUfaX4XxrlwsN4ck5ROvzjW-sB2Z0YxSdjH6jYSy4diWf4C3wraX8TBnV3F5ozLca_sdEdHrAm_0MxzqnpcH3RQgkecaQu3iUey8AegcrzN33_8hi1ie6MpQJxFq_rBU6MqmnMw1TwQuVq7
' Generated on: 2025-10-19T14:33:00.955620900

@startuml
skinparam classAttributeIconSize 0
hide circle

class GameEngine {
  ~uim: UIManager = new UIManager()
  ~gim: GetImputs = new GetImputs()
  ~gs: GameState
  ~b: Board
  ~wc: WinChecker
  --
  +{static} main(args: String[]): void
}

class WinChecker {
  -boardValues: int
  -boardSize: int
  --
  +WinChecker(board: Board)
  -sums(): ArrayList<Integer>
  +winner(): int
}

class Board {
  -board: int
  -isFull: boolean
  --
  +Board()
  +isFull(): boolean
  +isAvailableSquare(row: int, col: int): boolean
  +setSquare(movement: int, row: int, col: int): boolean
  +getBoardString(): String
  +getBoard(): int[][]
  +getSquare(row: int, col: int): int
}

class GameState {
  -player1: Player
  -player2: Player
  -gameMode: int
  --
  +GameState(gameMode: int)
  +setPlayers(name1: String, name2: String): void
  +getGameMode(): int
  +getPlayer1(): Player
  +getPlayer2(): Player
}

class Player {
  -name: String
  -points: int
  -mode: int
  --
  +Player(name: String, mode: int)
  +Player(name: String)
  +addPoint(): void
  +getPoints(): int
  +setName(name: String): void
  +getName(): String
  +setMode(mode: int): void
  +getMode(): int
}

class GetImputs {
  -s: Scanner = new Scanner(System.in)
  --
  +getInteger(min: int, max: int): int
}

class UIManager {
  +printHeader(): void
}

GameEngine --> UIManager
GameEngine --> GetImputs
GameEngine o-- GameState
GameEngine --> Board
GameEngine --> WinChecker
WinChecker ..> Board
GameState *-- Player
@enduml