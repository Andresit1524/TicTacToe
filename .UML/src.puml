' Generated by UML Generator
' Encoded: TLN1Kjim4BtdApGvEKtCfFJIUbg612ZDJ6WOKeO3mq6sjuucikHACe4ozDihoR8YqVIIIAktgwVTj-jJgR1GRKq7SajOWmMkKK6nb3Eb1CbR1Ok2ipNv3MWws90IK454GM4mi2Wqv-eRj898HGg9NWO8_H4Pki6iv3NwWXZit2OPwRCqrJ_Z2jGSfBhYZv3a78ioqs7qtoX3X2a3-qbOUKSO8wnQYJdbXUPM_OEVe8RYPn3MpJc_ziGkSGsMJoepj2umOo3CphCp6r9aQC6QLfrjeDXsW7oJnQyonfq6Qa81h2KaGxUBMqKeKGGiAYHdzfNcSCLByE_g-BxFqBLTx4t7eIddIdxNhajzl-Qkwy0gdSiNDBp3bAONmmaQtXodvyTcSPP-k5wPnQfHf6ubkXQa1cEOjtLE8GUxkLpYyzNQhBxDbkZJT3erwrkg16TcjTu-Cr1cTGxGe3bjhTiTLj81UBCXs0Amily_qezTb1kUyu8tG_JgIsoodqJFdo3P5S5Nmmf2Qw5xk7bmmlfITezs05qDUmfFfY2iCfiU4c5b7yocJoR-yFx171S2i0A7I1f_hTp3HdqThCVODeS9yyX96MlhWbM4EOMzQ9nMoYjgT1Ij75o2y5uwZ3-lCM495bLyOnnyBxCk-5jHsRrfIAygc_6zMznJBeVhjhRvc0c1dusmFY-OWWh4YN7U4LEGv6qFsGWHY_16UshRsYsvsfZo-dl7H7vjAJLXSyufODOPPu-OKAorkVxLOW69u3idaOBJNW61XowhGzPw1DJ0LAyeQptWOKLZqcIJd8GYyMVkjVSFNQahVyb1Eb5UEebqYM616Er8aLgk8PakMPrB4g97_x5FK1nZvEZP7eYUOd5XUZt3SAWTceAMKmXA3dMdkTN99Aa9SrcfyLEObHZsDbN1XBGynhP5vXIpxLBtJzWbtGaMOR_5dvUZenFN1tQwlqlJU7fxQpo_lJcOuDuMZl30Fxh4ZUQWC_UWhaVsp4w1bVfp-XS
' URL: http://www.plantuml.com/plantuml/uml/TLN1Kjim4BtdApGvEKtCfFJIUbg612ZDJ6WOKeO3mq6sjuucikHACe4ozDihoR8YqVIIIAktgwVTj-jJgR1GRKq7SajOWmMkKK6nb3Eb1CbR1Ok2ipNv3MWws90IK454GM4mi2Wqv-eRj898HGg9NWO8_H4Pki6iv3NwWXZit2OPwRCqrJ_Z2jGSfBhYZv3a78ioqs7qtoX3X2a3-qbOUKSO8wnQYJdbXUPM_OEVe8RYPn3MpJc_ziGkSGsMJoepj2umOo3CphCp6r9aQC6QLfrjeDXsW7oJnQyonfq6Qa81h2KaGxUBMqKeKGGiAYHdzfNcSCLByE_g-BxFqBLTx4t7eIddIdxNhajzl-Qkwy0gdSiNDBp3bAONmmaQtXodvyTcSPP-k5wPnQfHf6ubkXQa1cEOjtLE8GUxkLpYyzNQhBxDbkZJT3erwrkg16TcjTu-Cr1cTGxGe3bjhTiTLj81UBCXs0Amily_qezTb1kUyu8tG_JgIsoodqJFdo3P5S5Nmmf2Qw5xk7bmmlfITezs05qDUmfFfY2iCfiU4c5b7yocJoR-yFx171S2i0A7I1f_hTp3HdqThCVODeS9yyX96MlhWbM4EOMzQ9nMoYjgT1Ij75o2y5uwZ3-lCM495bLyOnnyBxCk-5jHsRrfIAygc_6zMznJBeVhjhRvc0c1dusmFY-OWWh4YN7U4LEGv6qFsGWHY_16UshRsYsvsfZo-dl7H7vjAJLXSyufODOPPu-OKAorkVxLOW69u3idaOBJNW61XowhGzPw1DJ0LAyeQptWOKLZqcIJd8GYyMVkjVSFNQahVyb1Eb5UEebqYM616Er8aLgk8PakMPrB4g97_x5FK1nZvEZP7eYUOd5XUZt3SAWTceAMKmXA3dMdkTN99Aa9SrcfyLEObHZsDbN1XBGynhP5vXIpxLBtJzWbtGaMOR_5dvUZenFN1tQwlqlJU7fxQpo_lJcOuDuMZl30Fxh4ZUQWC_UWhaVsp4w1bVfp-XS
' Generated on: 2025-10-19T21:15:24.061845500

@startuml
skinparam classAttributeIconSize 0
hide circle

class BotHeuristics {
  ~r: Random = new Random()
  --
  +getBestMove(board: Board): int
  -findWinningOrBlockingMove(board: Board, player: int): int
}

class Game {
  -s: Scanner
  -r: Random
  -ic: InputChecker
  -bh: BotHeuristics
  -wc: WinChecker
  -uii: UIUtilities
  -board: Board
  -gameMode: int
  -player1: Player
  -player2: Player
  -botsNameList: String = { "Wall-E", "R2-D2", "C-3PO", "Optimus Prime", "Bumblebee", "GLaDOS", "HAL 9000", "Ultron", "Skynet", "Deep Blue", "Watson", "Sophia", "Data", "T-800", "Robocop" }
  --
  +Game(gameMode: int, scanner: Scanner)
  -getPlayerName(n: int): String
  -getBotName(existingName: String): String
  -setPlayersNames(): String[]
  -createPlayers(playerNames: String[]): Player[]
  +start(): void
}

class GameEngine {
  -{static} printHeader(): void
  +{static} main(args: String[]): void
}

class WinChecker {
  -board: Board
  -boardSize: int
  --
  +WinChecker(board: Board)
  -getSums(): ArrayList<Integer>
  +winner(): int
}

class Board {
  -board: int
  --
  +Board()
  +Board(other: Board)
  +isFull(): boolean
  +isAvailableSquare(row: int, col: int): boolean
  +setSquare(movement: int, square: int): boolean
  +getBoardString(): String
  +getBoard(): int[][]
  +getSquare(row: int, col: int): int
}

class Player {
  -name: String
  -isBot: boolean
  --
  +Player(name: String)
  +Player(name: String, isBot: boolean)
  +getName(): String
  +isBot(): boolean
}

class InputChecker {
  -s: Scanner
  --
  +InputChecker(scanner: Scanner)
  +getInteger(min: int, max: int): int
  +getInteger(): int
}

class UIUtilities {
  +printBlankLine(): void
  +printBar(): void
}

BotHeuristics ..> Board
Game *-- InputChecker
Game *-- BotHeuristics
Game *-- WinChecker
Game *-- UIUtilities
Game *-- Board
Game *-- Player
WinChecker *-- Board
Board ..> Board
@enduml